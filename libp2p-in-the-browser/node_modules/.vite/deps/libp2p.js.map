{
  "version": 3,
  "sources": ["../../datastore-core/node_modules/it-all/index.js", "../../datastore-core/node_modules/it-drain/index.js", "../../datastore-core/node_modules/it-filter/index.js", "../../it-take/index.js", "../../retimer/time-browser.js", "../../retimer/retimer.js", "../../timeout-abort-controller/index.js", "../../set-delayed-interval/src/index.js", "../../events/events.js", "../../is-plain-obj/index.js", "../../merge-options/index.js", "../../netmask/lib/netmask.js", "../../private-ip/node_modules/ip-regex/index.js", "../../private-ip/node_modules/is-ip/index.js", "../../ipaddr.js/lib/ipaddr.js", "../../private-ip/lib/index.js", "../../private-ip/index.js", "../../truncate-utf8-bytes/lib/truncate.js", "../../utf8-byte-length/browser.js", "../../truncate-utf8-bytes/browser.js", "../../sanitize-filename/index.js", "../../node-forge/lib/pkcs7asn1.js", "../../node-forge/lib/mgf1.js", "../../node-forge/lib/mgf.js", "../../node-forge/lib/pss.js", "../../node-forge/lib/x509.js", "../../node-forge/lib/pkcs7.js", "../../hashlru/index.js", "../../@libp2p/multistream-select/node_modules/it-first/index.js", "../../mutable-proxy/build/index.js", "../../@libp2p/peer-store/node_modules/it-all/index.js", "../../@libp2p/peer-store/node_modules/it-filter/index.js", "../../@libp2p/peer-store/node_modules/it-map/index.js", "../../@libp2p/peer-store/node_modules/it-foreach/index.js", "../../eventemitter3/index.js", "../../receptacle/index.js", "../../p-fifo/node_modules/p-defer/index.js", "../../p-fifo/index.js", "../../@libp2p/interfaces/src/startable.ts", "../../datastore-core/src/utils.js", "../../datastore-core/src/base.js", "../../nanoid/index.browser.js", "../../interface-datastore/node_modules/uint8arrays/src/util/as-uint8array.ts", "../../interface-datastore/node_modules/uint8arrays/src/alloc.ts", "../../interface-datastore/node_modules/uint8arrays/src/util/bases.ts", "../../interface-datastore/node_modules/uint8arrays/src/to-string.ts", "../../interface-datastore/node_modules/uint8arrays/src/from-string.ts", "../../interface-datastore/src/key.ts", "../../datastore-core/src/errors.js", "../../datastore-core/src/memory.js", "../../libp2p/src/peer-routing.ts", "../../libp2p/src/errors.ts", "../../libp2p/src/content-routing/utils.ts", "../../it-filter/src/index.ts", "../../it-map/src/index.ts", "../../libp2p/node_modules/it-merge/src/index.ts", "../../it-first/src/index.ts", "../../it-drain/src/index.ts", "../../libp2p/src/content-routing/index.ts", "../../libp2p/src/get-peer.ts", "../../libp2p/src/address-manager/index.ts", "../../libp2p/src/connection-manager/index.ts", "../../merge-options/index.mjs", "../../libp2p/src/connection-manager/visibility-change-emitter.ts", "../../libp2p/src/connection-manager/latency-monitor.ts", "../../@libp2p/interface-connection/src/status.ts", "../../@libp2p/peer-collections/src/util.ts", "../../@libp2p/peer-collections/src/map.ts", "../../@libp2p/peer-collections/src/set.ts", "../../@libp2p/peer-collections/src/list.ts", "../../@libp2p/interface-peer-store/src/tags.ts", "../../libp2p/src/connection-manager/auto-dialler.ts", "../../it-all/src/index.ts", "../../it-sort/src/index.ts", "../../libp2p/src/circuit/transport.ts", "../../libp2p/node_modules/protons-runtime/src/utils.ts", "../../libp2p/node_modules/protons-runtime/src/decode.ts", "../../libp2p/node_modules/protons-runtime/src/encode.ts", "../../libp2p/node_modules/protons-runtime/src/codec.ts", "../../libp2p/node_modules/protons-runtime/src/codecs/enum.ts", "../../libp2p/node_modules/protons-runtime/src/codecs/message.ts", "../../libp2p/src/circuit/pb/index.ts", "../../@libp2p/utils/src/stream-to-ma-conn.ts", "../../libp2p/src/circuit/multicodec.ts", "../../libp2p/src/circuit/listener.ts", "../../libp2p/src/circuit/circuit/hop.ts", "../../libp2p/src/circuit/circuit/utils.ts", "../../libp2p/src/circuit/circuit/stream-handler.ts", "../../libp2p/src/circuit/circuit/stop.ts", "../../libp2p/src/circuit/index.ts", "../../libp2p/node_modules/uint8arrays/src/util/as-uint8array.ts", "../../libp2p/node_modules/uint8arrays/src/alloc.ts", "../../libp2p/node_modules/uint8arrays/src/util/bases.ts", "../../libp2p/node_modules/uint8arrays/src/from-string.ts", "../../libp2p/node_modules/uint8arrays/src/to-string.ts", "../../libp2p/src/circuit/utils.ts", "../../libp2p/src/circuit/constants.ts", "../../@libp2p/utils/src/multiaddr/is-private.ts", "../../@libp2p/utils/src/address-sort.ts", "../../libp2p/src/circuit/auto-relay.ts", "../../libp2p/src/keychain/index.ts", "../../libp2p/src/keychain/cms.ts", "../../libp2p/src/keychain/util.ts", "../../@libp2p/crypto/src/aes/ciphers-browser.ts", "../../@libp2p/crypto/src/aes/cipher-mode.ts", "../../@libp2p/crypto/src/pbkdf2.ts", "../../it-foreach/src/index.ts", "../../libp2p/src/metrics/index.ts", "../../libp2p/src/constants.ts", "../../libp2p/src/metrics/moving-average.ts", "../../libp2p/src/metrics/stats.ts", "../../p-reflect/index.js", "../../yocto-queue/index.js", "../../p-limit/index.js", "../../p-settle/index.js", "../../libp2p/src/transport-manager.ts", "../../@libp2p/tracked-map/src/index.ts", "../../libp2p/src/upgrader.ts", "../../@libp2p/multistream-select/src/constants.ts", "../../@libp2p/multistream-select/src/select.ts", "../../@libp2p/multistream-select/src/multistream.ts", "../../@libp2p/multistream-select/node_modules/uint8arrays/src/util/as-uint8array.ts", "../../@libp2p/multistream-select/node_modules/uint8arrays/src/alloc.ts", "../../@libp2p/multistream-select/node_modules/uint8arrays/src/util/bases.ts", "../../@libp2p/multistream-select/node_modules/uint8arrays/src/from-string.ts", "../../@libp2p/multistream-select/node_modules/uint8arrays/src/to-string.ts", "../../@libp2p/multistream-select/src/handle.ts", "../../@libp2p/connection/src/index.ts", "../../@libp2p/interface-connection/src/index.ts", "../../libp2p/src/registrar.ts", "../../@libp2p/interface-registrar/src/index.ts", "../../libp2p/src/identify/index.ts", "../../libp2p/src/identify/pb/message.ts", "../../@libp2p/peer-record/src/envelope/index.ts", "../../@libp2p/peer-record/node_modules/uint8arrays/src/util/as-uint8array.ts", "../../@libp2p/peer-record/node_modules/uint8arrays/src/alloc.ts", "../../@libp2p/peer-record/node_modules/uint8arrays/src/util/bases.ts", "../../@libp2p/peer-record/node_modules/uint8arrays/src/from-string.ts", "../../@libp2p/peer-record/node_modules/uint8arrays/src/equals.ts", "../../@libp2p/peer-record/src/errors.ts", "../../@libp2p/peer-record/node_modules/protons-runtime/src/utils.ts", "../../@libp2p/peer-record/node_modules/protons-runtime/src/decode.ts", "../../@libp2p/peer-record/node_modules/protons-runtime/src/encode.ts", "../../@libp2p/peer-record/node_modules/protons-runtime/src/codec.ts", "../../@libp2p/peer-record/node_modules/protons-runtime/src/codecs/message.ts", "../../@libp2p/peer-record/src/envelope/envelope.ts", "../../@libp2p/utils/src/array-equals.ts", "../../@libp2p/peer-record/src/peer-record/peer-record.ts", "../../@libp2p/peer-record/src/peer-record/consts.ts", "../../@libp2p/peer-record/src/peer-record/index.ts", "../../libp2p/src/version.ts", "../../libp2p/src/identify/consts.ts", "../../libp2p/src/fetch/index.ts", "../../libp2p/src/fetch/pb/proto.ts", "../../libp2p/src/fetch/constants.ts", "../../libp2p/src/ping/index.ts", "../../libp2p/node_modules/uint8arrays/src/equals.ts", "../../libp2p/src/ping/constants.ts", "../../@achingbrain/nat-port-mapper/src/browser.ts", "../../libp2p/src/nat-manager.ts", "../../is-loopback-addr/src/index.ts", "../../@libp2p/utils/src/multiaddr/is-loopback.ts", "../../libp2p/src/peer-record-updater.ts", "../../libp2p/src/dht/dht-peer-routing.ts", "../../@libp2p/peer-store/src/address-book.ts", "../../@libp2p/peer-store/src/errors.ts", "../../@libp2p/peer-store/src/key-book.ts", "../../@libp2p/peer-store/node_modules/uint8arrays/src/equals.ts", "../../@libp2p/peer-store/src/metadata-book.ts", "../../@libp2p/peer-store/src/proto-book.ts", "../../@libp2p/peer-store/src/store.ts", "../../@libp2p/peer-store/node_modules/protons-runtime/src/utils.ts", "../../@libp2p/peer-store/node_modules/protons-runtime/src/decode.ts", "../../@libp2p/peer-store/node_modules/protons-runtime/src/encode.ts", "../../@libp2p/peer-store/node_modules/protons-runtime/src/codec.ts", "../../@libp2p/peer-store/node_modules/protons-runtime/src/codecs/message.ts", "../../@libp2p/peer-store/src/pb/peer.ts", "../../p-queue/dist/index.js", "../../p-queue/node_modules/p-timeout/index.js", "../../p-queue/dist/lower-bound.js", "../../p-queue/dist/priority-queue.js", "../../mortice/src/constants.ts", "../../observable-webworkers/src/index.ts", "../../mortice/src/browser.ts", "../../mortice/src/index.ts", "../../@libp2p/peer-store/src/index.ts", "../../@libp2p/peer-store/src/pb/tags.ts", "../../libp2p/src/dht/dht-content-routing.ts", "../../libp2p/src/components.ts", "../../dns-over-http-resolver/src/index.ts", "../../native-fetch/esm/src/index.js", "../../dns-over-http-resolver/src/utils.ts", "../../@multiformats/multiaddr/src/resolvers/dns.browser.ts", "../../@multiformats/multiaddr/src/resolvers/index.ts", "../../libp2p/src/config.ts", "../../@libp2p/peer-id-factory/node_modules/uint8arrays/src/util/as-uint8array.ts", "../../@libp2p/peer-id-factory/node_modules/uint8arrays/src/alloc.ts", "../../@libp2p/peer-id-factory/node_modules/uint8arrays/src/util/bases.ts", "../../@libp2p/peer-id-factory/node_modules/protons-runtime/src/utils.ts", "../../@libp2p/peer-id-factory/node_modules/protons-runtime/src/decode.ts", "../../@libp2p/peer-id-factory/node_modules/protons-runtime/src/encode.ts", "../../@libp2p/peer-id-factory/node_modules/protons-runtime/src/codec.ts", "../../@libp2p/peer-id-factory/node_modules/protons-runtime/src/codecs/message.ts", "../../@libp2p/peer-id-factory/src/proto.ts", "../../@libp2p/peer-id-factory/src/index.ts", "../../libp2p/node_modules/uint8arrays/src/concat.ts", "../../libp2p/src/libp2p.ts", "../../libp2p/src/dht/dummy-dht.ts", "../../libp2p/src/pubsub/dummy-pubsub.ts", "../../libp2p/src/connection-manager/dialer/index.ts", "../../libp2p/src/connection-manager/dialer/dial-request.ts", "../../libp2p/src/index.ts"],
  "sourcesContent": ["'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n", "'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n", "'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n", "'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n", "'use strict'\n\nmodule.exports = function getTime () {\n  return Date.now()\n}\n", "'use strict'\n\nconst getTime = require('./time')\n\nclass Retimer {\n  constructor (callback, timeout, args) {\n    const that = this\n\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._args = args\n    this._triggered = false\n\n    this._timerWrapper = () => {\n      if (that._rescheduled > 0) {\n        that._scheduled = that._rescheduled - (getTime() - that._started)\n        that._schedule(that._scheduled)\n      } else {\n        that._triggered = true\n        callback.apply(null, that._args)\n      }\n    }\n\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  reschedule (timeout) {\n    if (!timeout) {\n      timeout = this._scheduled\n    }\n    const now = getTime()\n    if ((now + timeout) - (this._started + this._scheduled) < 0) {\n      clearTimeout(this._timer)\n      this._schedule(timeout)\n    } else if (!this._triggered) {\n      this._started = now\n      this._rescheduled = timeout\n    } else {\n      this._schedule(timeout)\n    }\n  }\n\n  _schedule (timeout) {\n    this._triggered = false\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  clear () {\n    clearTimeout(this._timer)\n  }\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  let args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    /* eslint-disable no-var */\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n", "'use strict'\n\nconst { AbortController } = globalThis\n\n// @ts-expect-error no types\nconst retimer = require('retimer')\n\nclass TimeoutController extends AbortController {\n  /**\n   * @constructor\n   * @param {number} ms milliseconds\n   */\n  constructor (ms) {\n    super()\n    this._ms = ms\n    this._timer = retimer(() => this.abort(), ms)\n    // Patch for safari not supported extending built in classes\n    Object.setPrototypeOf(this, TimeoutController.prototype)\n  }\n\n  /**\n   * Aborts the controller and clears the timer\n   */\n  abort () {\n    this._timer.clear()\n    return super.abort()\n  }\n\n  /**\n   * Clears the timer\n   */\n  clear () {\n    this._timer.clear()\n  }\n\n  /**\n   * Resets the timer\n   */\n  reset () {\n    this._timer.clear()\n    this._timer = retimer(() => this.abort(), this._ms)\n  }\n}\n\nmodule.exports = {\n  TimeoutController\n}\n", "'use strict'\n\nconst intervals = new Map()\n\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically (task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task()\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => { throw err }, 1)\n      break\n    }\n\n    if (!intervals.get(id)) {\n      break\n    }\n\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval)\n\n      intervals.set(id, _timeout)\n    })\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval (task, interval, delay) {\n  delay = delay || interval\n\n  const id = _generateId()\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id)\n  }, delay)\n\n  intervals.set(id, _timeout)\n\n  return id\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval (id) {\n  const _timeout = intervals.get(id)\n\n  if (_timeout) {\n    clearTimeout(_timeout)\n    intervals.delete(id)\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n", "'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var Netmask, atob, chr, chr0, chrA, chra, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, c, i, j, n, ref;\n    b = [];\n    for (i = j = 0; j <= 3; i = ++j) {\n      if (ip.length === 0) {\n        break;\n      }\n      if (i > 0) {\n        if (ip[0] !== '.') {\n          throw new Error('Invalid IP');\n        }\n        ip = ip.substring(1);\n      }\n      ref = atob(ip), n = ref[0], c = ref[1];\n      ip = ip.substring(c);\n      b.push(n);\n    }\n    if (ip.length !== 0) {\n      throw new Error('Invalid IP');\n    }\n    switch (b.length) {\n      case 1:\n        if (b[0] > 0xFFFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return b[0] >>> 0;\n      case 2:\n        if (b[0] > 0xFF || b[1] > 0xFFFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1]) >>> 0;\n      case 3:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFFFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2]) >>> 0;\n      case 4:\n        if (b[0] > 0xFF || b[1] > 0xFF || b[2] > 0xFF || b[3] > 0xFF) {\n          throw new Error('Invalid IP');\n        }\n        return (b[0] << 24 | b[1] << 16 | b[2] << 8 | b[3]) >>> 0;\n      default:\n        throw new Error('Invalid IP');\n    }\n  };\n\n  chr = function(b) {\n    return b.charCodeAt(0);\n  };\n\n  chr0 = chr('0');\n\n  chra = chr('a');\n\n  chrA = chr('A');\n\n  atob = function(s) {\n    var base, dmax, i, n, start;\n    n = 0;\n    base = 10;\n    dmax = '9';\n    i = 0;\n    if (s.length > 1 && s[i] === '0') {\n      if (s[i + 1] === 'x' || s[i + 1] === 'X') {\n        i += 2;\n        base = 16;\n      } else if ('0' <= s[i + 1] && s[i + 1] <= '9') {\n        i++;\n        base = 8;\n        dmax = '7';\n      }\n    }\n    start = i;\n    while (i < s.length) {\n      if ('0' <= s[i] && s[i] <= dmax) {\n        n = (n * base + (chr(s[i]) - chr0)) >>> 0;\n      } else if (base === 16) {\n        if ('a' <= s[i] && s[i] <= 'f') {\n          n = (n * base + (10 + chr(s[i]) - chra)) >>> 0;\n        } else if ('A' <= s[i] && s[i] <= 'F') {\n          n = (n * base + (10 + chr(s[i]) - chrA)) >>> 0;\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n      if (n > 0xFFFFFFFF) {\n        throw new Error('too large');\n      }\n      i++;\n    }\n    if (i === start) {\n      throw new Error('empty octet');\n    }\n    return [n, i];\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        mask = 32;\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask || mask === 0) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error1) {\n        error = error1;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, lastLong, long;\n      long = ip2long(this.first);\n      lastLong = ip2long(this.last);\n      index = 0;\n      while (long <= lastLong) {\n        fn(long2ip(long), long, index);\n        index++;\n        long++;\n      }\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n", "'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n", "'use strict';\nconst ipRegex = require('ip-regex');\n\nconst isIp = string => ipRegex({exact: true}).test(string);\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\n\nmodule.exports = isIp;\n", "(function (root) {\n    'use strict';\n    // A list of regular expressions that match arbitrary IPv4 addresses,\n    // for which a number of weird notations exist.\n    // Note that an address like 0010.0xa5.1.1 is considered legal.\n    const ipv4Part = '(0?\\\\d+|0x[a-f0-9]+)';\n    const ipv4Regexes = {\n        fourOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        threeOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        twoOctet: new RegExp(`^${ipv4Part}\\\\.${ipv4Part}$`, 'i'),\n        longValue: new RegExp(`^${ipv4Part}$`, 'i')\n    };\n\n    // Regular Expression for checking Octal numbers\n    const octalRegex = new RegExp(`^0[0-7]+$`, 'i');\n    const hexRegex = new RegExp(`^0x[a-f0-9]+$`, 'i');\n\n    const zoneIndex = '%[0-9a-z]{1,}';\n\n    // IPv6-matching regular expressions.\n    // For IPv6, the task is simpler: it is enough to match the colon-delimited\n    // hexadecimal IPv6 and a transitional variant with dotted-decimal IPv4 at\n    // the end.\n    const ipv6Part = '(?:[0-9a-f]+::?)+';\n    const ipv6Regexes = {\n        zoneIndex: new RegExp(zoneIndex, 'i'),\n        'native': new RegExp(`^(::)?(${ipv6Part})?([0-9a-f]+)?(::)?(${zoneIndex})?$`, 'i'),\n        deprecatedTransitional: new RegExp(`^(?:::)(${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?)$`, 'i'),\n        transitional: new RegExp(`^((?:${ipv6Part})|(?:::)(?:${ipv6Part})?)${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}\\\\.${ipv4Part}(${zoneIndex})?$`, 'i')\n    };\n\n    // Expand :: in an IPv6 address or address part consisting of `parts` groups.\n    function expandIPv6 (string, parts) {\n        // More than one '::' means invalid adddress\n        if (string.indexOf('::') !== string.lastIndexOf('::')) {\n            return null;\n        }\n\n        let colonCount = 0;\n        let lastColon = -1;\n        let zoneId = (string.match(ipv6Regexes.zoneIndex) || [])[0];\n        let replacement, replacementCount;\n\n        // Remove zone index and save it for later\n        if (zoneId) {\n            zoneId = zoneId.substring(1);\n            string = string.replace(/%.+$/, '');\n        }\n\n        // How many parts do we already have?\n        while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n            colonCount++;\n        }\n\n        // 0::0 is two parts more than ::\n        if (string.substr(0, 2) === '::') {\n            colonCount--;\n        }\n\n        if (string.substr(-2, 2) === '::') {\n            colonCount--;\n        }\n\n        // The following loop would hang if colonCount > parts\n        if (colonCount > parts) {\n            return null;\n        }\n\n        // replacement = ':' + '0:' * (parts - colonCount)\n        replacementCount = parts - colonCount;\n        replacement = ':';\n        while (replacementCount--) {\n            replacement += '0:';\n        }\n\n        // Insert the missing zeroes\n        string = string.replace('::', replacement);\n\n        // Trim any garbage which may be hanging around if :: was at the edge in\n        // the source strin\n        if (string[0] === ':') {\n            string = string.slice(1);\n        }\n\n        if (string[string.length - 1] === ':') {\n            string = string.slice(0, -1);\n        }\n\n        parts = (function () {\n            const ref = string.split(':');\n            const results = [];\n\n            for (let i = 0; i < ref.length; i++) {\n                results.push(parseInt(ref[i], 16));\n            }\n\n            return results;\n        })();\n\n        return {\n            parts: parts,\n            zoneId: zoneId\n        };\n    }\n\n    // A generic CIDR (Classless Inter-Domain Routing) RFC1518 range matcher.\n    function matchCIDR (first, second, partSize, cidrBits) {\n        if (first.length !== second.length) {\n            throw new Error('ipaddr: cannot match CIDR for objects with different lengths');\n        }\n\n        let part = 0;\n        let shift;\n\n        while (cidrBits > 0) {\n            shift = partSize - cidrBits;\n            if (shift < 0) {\n                shift = 0;\n            }\n\n            if (first[part] >> shift !== second[part] >> shift) {\n                return false;\n            }\n\n            cidrBits -= partSize;\n            part += 1;\n        }\n\n        return true;\n    }\n\n    function parseIntAuto (string) {\n        // Hexadedimal base 16 (0x#)\n        if (hexRegex.test(string)) {\n            return parseInt(string, 16);\n        }\n        // While octal representation is discouraged by ECMAScript 3\n        // and forbidden by ECMAScript 5, we silently allow it to\n        // work only if the rest of the string has numbers less than 8.\n        if (string[0] === '0' && !isNaN(parseInt(string[1], 10))) {\n        if (octalRegex.test(string)) {\n            return parseInt(string, 8);\n        }\n            throw new Error(`ipaddr: cannot parse ${string} as octal`);\n        }\n        // Always include the base 10 radix!\n        return parseInt(string, 10);\n    }\n\n    function padPart (part, length) {\n        while (part.length < length) {\n            part = `0${part}`;\n        }\n\n        return part;\n    }\n\n    const ipaddr = {};\n\n    // An IPv4 address (RFC791).\n    ipaddr.IPv4 = (function () {\n        // Constructs a new IPv4 address from an array of four octets\n        // in network order (MSB first)\n        // Verifies the input.\n        function IPv4 (octets) {\n            if (octets.length !== 4) {\n                throw new Error('ipaddr: ipv4 octet count should be 4');\n            }\n\n            let i, octet;\n\n            for (i = 0; i < octets.length; i++) {\n                octet = octets[i];\n                if (!((0 <= octet && octet <= 255))) {\n                    throw new Error('ipaddr: ipv4 octet should fit in 8 bits');\n                }\n            }\n\n            this.octets = octets;\n        }\n\n        // Special IPv4 address ranges.\n        // See also https://en.wikipedia.org/wiki/Reserved_IP_addresses\n        IPv4.prototype.SpecialRanges = {\n            unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n            broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n            // RFC3171\n            multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n            // RFC3927\n            linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n            // RFC5735\n            loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n            // RFC6598\n            carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n            // RFC1918\n            'private': [\n                [new IPv4([10, 0, 0, 0]), 8],\n                [new IPv4([172, 16, 0, 0]), 12],\n                [new IPv4([192, 168, 0, 0]), 16]\n            ],\n            // Reserved and testing-only ranges; RFCs 5735, 5737, 2544, 1700\n            reserved: [\n                [new IPv4([192, 0, 0, 0]), 24],\n                [new IPv4([192, 0, 2, 0]), 24],\n                [new IPv4([192, 88, 99, 0]), 24],\n                [new IPv4([198, 51, 100, 0]), 24],\n                [new IPv4([203, 0, 113, 0]), 24],\n                [new IPv4([240, 0, 0, 0]), 4]\n            ]\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv4.prototype.kind = function () {\n            return 'ipv4';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv4.prototype.match = function (other, cidrRange) {\n            let ref;\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv4') {\n                throw new Error('ipaddr: cannot match ipv4 address with non-ipv4 one');\n            }\n\n            return matchCIDR(this.octets, other.octets, 8, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv4 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv4.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 8,\n                128: 7,\n                192: 6,\n                224: 5,\n                240: 4,\n                248: 3,\n                252: 2,\n                254: 1,\n                255: 0\n            };\n            let i, octet, zeros;\n\n            for (i = 3; i >= 0; i -= 1) {\n                octet = this.octets[i];\n                if (octet in zerotable) {\n                    zeros = zerotable[octet];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 8) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 32 - cidr;\n        };\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv4.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv4.prototype.toByteArray = function () {\n            return this.octets.slice(0);\n        };\n\n        // Converts this IPv4 address to an IPv4-mapped IPv6 address.\n        IPv4.prototype.toIPv4MappedAddress = function () {\n            return ipaddr.IPv6.parse(`::ffff:${this.toString()}`);\n        };\n\n        // Symmetrical method strictly for aligning with the IPv6 methods.\n        IPv4.prototype.toNormalizedString = function () {\n            return this.toString();\n        };\n\n        // Returns the address in convenient, decimal-dotted format.\n        IPv4.prototype.toString = function () {\n            return this.octets.join('.');\n        };\n\n        return IPv4;\n    })();\n\n    // A utility function to return broadcast address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.broadcastAddressFromCIDR = function (string) {\n\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 4) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Checks if a given string is formatted like IPv4 address.\n    ipaddr.IPv4.isIPv4 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks if a given string is a valid IPv4 address.\n    ipaddr.IPv4.isValid = function (string) {\n        try {\n            new this(this.parser(string));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // Checks if a given string is a full four-part IPv4 Address.\n    ipaddr.IPv4.isValidFourPartDecimal = function (string) {\n        if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv4 interface and prefix length in CIDR notation\n    ipaddr.IPv4.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 4) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n        }\n    };\n\n    // Tries to parse and validate a string with IPv4 address.\n    // Throws an error if it fails.\n    ipaddr.IPv4.parse = function (string) {\n        const parts = this.parser(string);\n\n        if (parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv4 Address');\n        }\n\n        return new this(parts);\n    };\n\n    // Parses the string as an IPv4 Address with CIDR Notation.\n    ipaddr.IPv4.parseCIDR = function (string) {\n        let match;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            const maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 32) {\n                const parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv4 CIDR range');\n    };\n\n    // Classful variants (like a.b, where a is an octet, and b is a 24-bit\n    // value representing last three octets; this corresponds to a class C\n    // address) are omitted due to classless nature of modern Internet.\n    ipaddr.IPv4.parser = function (string) {\n        let match, part, value;\n\n        // parseInt recognizes all that octal & hexadecimal weirdness for us\n        if ((match = string.match(ipv4Regexes.fourOctet))) {\n            return (function () {\n                const ref = match.slice(1, 6);\n                const results = [];\n\n                for (let i = 0; i < ref.length; i++) {\n                    part = ref[i];\n                    results.push(parseIntAuto(part));\n                }\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.longValue))) {\n            value = parseIntAuto(match[1]);\n            if (value > 0xffffffff || value < 0) {\n                throw new Error('ipaddr: address outside defined range');\n            }\n\n            return ((function () {\n                const results = [];\n                let shift;\n\n                for (shift = 0; shift <= 24; shift += 8) {\n                    results.push((value >> shift) & 0xff);\n                }\n\n                return results;\n            })()).reverse();\n        } else if ((match = string.match(ipv4Regexes.twoOctet))) {\n            return (function () {\n                const ref = match.slice(1, 4);\n                const results = [];\n\n                value = parseIntAuto(ref[1]);\n                if (value > 0xffffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push((value >> 16) & 0xff);\n                results.push((value >>  8) & 0xff);\n                results.push( value        & 0xff);\n\n                return results;\n            })();\n        } else if ((match = string.match(ipv4Regexes.threeOctet))) {\n            return (function () {\n                const ref = match.slice(1, 5);\n                const results = [];\n\n                value = parseIntAuto(ref[2]);\n                if (value > 0xffff || value < 0) {\n                    throw new Error('ipaddr: address outside defined range');\n                }\n\n                results.push(parseIntAuto(ref[0]));\n                results.push(parseIntAuto(ref[1]));\n                results.push((value >> 8) & 0xff);\n                results.push( value       & 0xff);\n\n                return results;\n            })();\n        } else {\n            return null;\n        }\n    };\n\n    // A utility function to return subnet mask in IPv4 format given the prefix length\n    ipaddr.IPv4.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 32) {\n            throw new Error('ipaddr: invalid IPv4 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 4) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // An IPv6 address (RFC2460)\n    ipaddr.IPv6 = (function () {\n        // Constructs an IPv6 address from an array of eight 16 - bit parts\n        // or sixteen 8 - bit parts in network order(MSB first).\n        // Throws an error if the input is invalid.\n        function IPv6 (parts, zoneId) {\n            let i, part;\n\n            if (parts.length === 16) {\n                this.parts = [];\n                for (i = 0; i <= 14; i += 2) {\n                    this.parts.push((parts[i] << 8) | parts[i + 1]);\n                }\n            } else if (parts.length === 8) {\n                this.parts = parts;\n            } else {\n                throw new Error('ipaddr: ipv6 part count should be 8 or 16');\n            }\n\n            for (i = 0; i < this.parts.length; i++) {\n                part = this.parts[i];\n                if (!((0 <= part && part <= 0xffff))) {\n                    throw new Error('ipaddr: ipv6 part should fit in 16 bits');\n                }\n            }\n\n            if (zoneId) {\n                this.zoneId = zoneId;\n            }\n        }\n\n        // Special IPv6 ranges\n        IPv6.prototype.SpecialRanges = {\n            // RFC4291, here and after\n            unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n            linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n            multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n            loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n            uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n            ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n            // RFC6145\n            rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n            // RFC6052\n            rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n            // RFC3056\n            '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n            // RFC6052, RFC6146\n            teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n            // RFC4291\n            reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n        };\n\n        // Checks if this address is an IPv4-mapped IPv6 address.\n        IPv6.prototype.isIPv4MappedAddress = function () {\n            return this.range() === 'ipv4Mapped';\n        };\n\n        // The 'kind' method exists on both IPv4 and IPv6 classes.\n        IPv6.prototype.kind = function () {\n            return 'ipv6';\n        };\n\n        // Checks if this address matches other one within given CIDR range.\n        IPv6.prototype.match = function (other, cidrRange) {\n            let ref;\n\n            if (cidrRange === undefined) {\n                ref = other;\n                other = ref[0];\n                cidrRange = ref[1];\n            }\n\n            if (other.kind() !== 'ipv6') {\n                throw new Error('ipaddr: cannot match ipv6 address with non-ipv6 one');\n            }\n\n            return matchCIDR(this.parts, other.parts, 16, cidrRange);\n        };\n\n        // returns a number of leading ones in IPv6 address, making sure that\n        // the rest is a solid sequence of 0's (valid netmask)\n        // returns either the CIDR length or null if mask is not valid\n        IPv6.prototype.prefixLengthFromSubnetMask = function () {\n            let cidr = 0;\n            // non-zero encountered stop scanning for zeroes\n            let stop = false;\n            // number of zeroes in octet\n            const zerotable = {\n                0: 16,\n                32768: 15,\n                49152: 14,\n                57344: 13,\n                61440: 12,\n                63488: 11,\n                64512: 10,\n                65024: 9,\n                65280: 8,\n                65408: 7,\n                65472: 6,\n                65504: 5,\n                65520: 4,\n                65528: 3,\n                65532: 2,\n                65534: 1,\n                65535: 0\n            };\n            let part, zeros;\n\n            for (let i = 7; i >= 0; i -= 1) {\n                part = this.parts[i];\n                if (part in zerotable) {\n                    zeros = zerotable[part];\n                    if (stop && zeros !== 0) {\n                        return null;\n                    }\n\n                    if (zeros !== 16) {\n                        stop = true;\n                    }\n\n                    cidr += zeros;\n                } else {\n                    return null;\n                }\n            }\n\n            return 128 - cidr;\n        };\n\n\n        // Checks if the address corresponds to one of the special ranges.\n        IPv6.prototype.range = function () {\n            return ipaddr.subnetMatch(this, this.SpecialRanges);\n        };\n\n        // Returns an array of byte-sized values in network order (MSB first)\n        IPv6.prototype.toByteArray = function () {\n            let part;\n            const bytes = [];\n            const ref = this.parts;\n            for (let i = 0; i < ref.length; i++) {\n                part = ref[i];\n                bytes.push(part >> 8);\n                bytes.push(part & 0xff);\n            }\n\n            return bytes;\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:0db8:0008:0066:0000:0000:0000:0001\n        IPv6.prototype.toFixedLengthString = function () {\n            const addr = ((function () {\n                const results = [];\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(padPart(this.parts[i].toString(16), 4));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Converts this address to IPv4 address if it is an IPv4-mapped IPv6 address.\n        // Throws an error otherwise.\n        IPv6.prototype.toIPv4Address = function () {\n            if (!this.isIPv4MappedAddress()) {\n                throw new Error('ipaddr: trying to convert a generic ipv6 address to ipv4');\n            }\n\n            const ref = this.parts.slice(-2);\n            const high = ref[0];\n            const low = ref[1];\n\n            return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n        };\n\n        // Returns the address in expanded format with all zeroes included, like\n        // 2001:db8:8:66:0:0:0:1\n        //\n        // Deprecated: use toFixedLengthString() instead.\n        IPv6.prototype.toNormalizedString = function () {\n            const addr = ((function () {\n                const results = [];\n\n                for (let i = 0; i < this.parts.length; i++) {\n                    results.push(this.parts[i].toString(16));\n                }\n\n                return results;\n            }).call(this)).join(':');\n\n            let suffix = '';\n\n            if (this.zoneId) {\n                suffix = `%${this.zoneId}`;\n            }\n\n            return addr + suffix;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        // in line with RFC 5952 (see https://tools.ietf.org/html/rfc5952#section-4)\n        IPv6.prototype.toRFC5952String = function () {\n            const regex = /((^|:)(0(:|$)){2,})/g;\n            const string = this.toNormalizedString();\n            let bestMatchIndex = 0;\n            let bestMatchLength = -1;\n            let match;\n\n            while ((match = regex.exec(string))) {\n                if (match[0].length > bestMatchLength) {\n                    bestMatchIndex = match.index;\n                    bestMatchLength = match[0].length;\n                }\n            }\n\n            if (bestMatchLength < 0) {\n                return string;\n            }\n\n            return `${string.substring(0, bestMatchIndex)}::${string.substring(bestMatchIndex + bestMatchLength)}`;\n        };\n\n        // Returns the address in compact, human-readable format like\n        // 2001:db8:8:66::1\n        //\n        // Deprecated: use toRFC5952String() instead.\n        IPv6.prototype.toString = function () {\n            // Replace the first sequence of 1 or more '0' parts with '::'\n            return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n        };\n\n        return IPv6;\n\n    })();\n\n    // A utility function to return broadcast address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.broadcastAddressFromCIDR = function (string) {\n        try {\n            const cidr = this.parseCIDR(string);\n            const ipInterfaceOctets = cidr[0].toByteArray();\n            const subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            const octets = [];\n            let i = 0;\n            while (i < 16) {\n                // Broadcast address is bitwise OR between ip interface and inverted mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Checks if a given string is formatted like IPv6 address.\n    ipaddr.IPv6.isIPv6 = function (string) {\n        return this.parser(string) !== null;\n    };\n\n    // Checks to see if string is a valid IPv6 Address\n    ipaddr.IPv6.isValid = function (string) {\n\n        // Since IPv6.isValid is always called first, this shortcut\n        // provides a substantial performance gain.\n        if (typeof string === 'string' && string.indexOf(':') === -1) {\n            return false;\n        }\n\n        try {\n            const addr = this.parser(string);\n            new this(addr.parts, addr.zoneId);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // A utility function to return network address given the IPv6 interface and prefix length in CIDR notation\n    ipaddr.IPv6.networkAddressFromCIDR = function (string) {\n        let cidr, i, ipInterfaceOctets, octets, subnetMaskOctets;\n\n        try {\n            cidr = this.parseCIDR(string);\n            ipInterfaceOctets = cidr[0].toByteArray();\n            subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n            octets = [];\n            i = 0;\n            while (i < 16) {\n                // Network address is bitwise AND between ip interface and mask\n                octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n                i++;\n            }\n\n            return new this(octets);\n        } catch (e) {\n            throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${e})`);\n        }\n    };\n\n    // Tries to parse and validate a string with IPv6 address.\n    // Throws an error if it fails.\n    ipaddr.IPv6.parse = function (string) {\n        const addr = this.parser(string);\n\n        if (addr.parts === null) {\n            throw new Error('ipaddr: string is not formatted like an IPv6 Address');\n        }\n\n        return new this(addr.parts, addr.zoneId);\n    };\n\n    ipaddr.IPv6.parseCIDR = function (string) {\n        let maskLength, match, parsed;\n\n        if ((match = string.match(/^(.+)\\/(\\d+)$/))) {\n            maskLength = parseInt(match[2]);\n            if (maskLength >= 0 && maskLength <= 128) {\n                parsed = [this.parse(match[1]), maskLength];\n                Object.defineProperty(parsed, 'toString', {\n                    value: function () {\n                        return this.join('/');\n                    }\n                });\n                return parsed;\n            }\n        }\n\n        throw new Error('ipaddr: string is not formatted like an IPv6 CIDR range');\n    };\n\n    // Parse an IPv6 address.\n    ipaddr.IPv6.parser = function (string) {\n        let addr, i, match, octet, octets, zoneId;\n\n        if ((match = string.match(ipv6Regexes.deprecatedTransitional))) {\n            return this.parser(`::ffff:${match[1]}`);\n        }\n        if (ipv6Regexes.native.test(string)) {\n            return expandIPv6(string, 8);\n        }\n        if ((match = string.match(ipv6Regexes.transitional))) {\n            zoneId = match[6] || '';\n            addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n            if (addr.parts) {\n                octets = [\n                    parseInt(match[2]),\n                    parseInt(match[3]),\n                    parseInt(match[4]),\n                    parseInt(match[5])\n                ];\n                for (i = 0; i < octets.length; i++) {\n                    octet = octets[i];\n                    if (!((0 <= octet && octet <= 255))) {\n                        return null;\n                    }\n                }\n\n                addr.parts.push(octets[0] << 8 | octets[1]);\n                addr.parts.push(octets[2] << 8 | octets[3]);\n                return {\n                    parts: addr.parts,\n                    zoneId: addr.zoneId\n                };\n            }\n        }\n\n        return null;\n    };\n\n    // A utility function to return subnet mask in IPv6 format given the prefix length\n    ipaddr.IPv6.subnetMaskFromPrefixLength = function (prefix) {\n        prefix = parseInt(prefix);\n        if (prefix < 0 || prefix > 128) {\n            throw new Error('ipaddr: invalid IPv6 prefix length');\n        }\n\n        const octets = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        let j = 0;\n        const filledOctetCount = Math.floor(prefix / 8);\n\n        while (j < filledOctetCount) {\n            octets[j] = 255;\n            j++;\n        }\n\n        if (filledOctetCount < 16) {\n            octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n        }\n\n        return new this(octets);\n    };\n\n    // Try to parse an array in network order (MSB first) for IPv4 and IPv6\n    ipaddr.fromByteArray = function (bytes) {\n        const length = bytes.length;\n\n        if (length === 4) {\n            return new ipaddr.IPv4(bytes);\n        } else if (length === 16) {\n            return new ipaddr.IPv6(bytes);\n        } else {\n            throw new Error('ipaddr: the binary input is neither an IPv6 nor IPv4 address');\n        }\n    };\n\n    // Checks if the address is valid IP address\n    ipaddr.isValid = function (string) {\n        return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n    };\n\n\n    // Attempts to parse an IP Address, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parse = function (string) {\n        if (ipaddr.IPv6.isValid(string)) {\n            return ipaddr.IPv6.parse(string);\n        } else if (ipaddr.IPv4.isValid(string)) {\n            return ipaddr.IPv4.parse(string);\n        } else {\n            throw new Error('ipaddr: the address has neither IPv6 nor IPv4 format');\n        }\n    };\n\n    // Attempt to parse CIDR notation, first through IPv6 then IPv4.\n    // Throws an error if it could not be parsed.\n    ipaddr.parseCIDR = function (string) {\n        try {\n            return ipaddr.IPv6.parseCIDR(string);\n        } catch (e) {\n            try {\n                return ipaddr.IPv4.parseCIDR(string);\n            } catch (e2) {\n                throw new Error('ipaddr: the address has neither IPv6 nor IPv4 CIDR format');\n            }\n        }\n    };\n\n    // Parse an address and return plain IPv4 address if it is an IPv4-mapped address\n    ipaddr.process = function (string) {\n        const addr = this.parse(string);\n\n        if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n            return addr.toIPv4Address();\n        } else {\n            return addr;\n        }\n    };\n\n    // An utility function to ease named range matching. See examples below.\n    // rangeList can contain both IPv4 and IPv6 subnet entries and will not throw errors\n    // on matching IPv4 addresses to IPv6 ranges or vice versa.\n    ipaddr.subnetMatch = function (address, rangeList, defaultName) {\n        let i, rangeName, rangeSubnets, subnet;\n\n        if (defaultName === undefined || defaultName === null) {\n            defaultName = 'unicast';\n        }\n\n        for (rangeName in rangeList) {\n            if (Object.prototype.hasOwnProperty.call(rangeList, rangeName)) {\n                rangeSubnets = rangeList[rangeName];\n                // ECMA5 Array.isArray isn't available everywhere\n                if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n                    rangeSubnets = [rangeSubnets];\n                }\n\n                for (i = 0; i < rangeSubnets.length; i++) {\n                    subnet = rangeSubnets[i];\n                    if (address.kind() === subnet[0].kind() && address.match.apply(address, subnet)) {\n                        return rangeName;\n                    }\n                }\n            }\n        }\n\n        return defaultName;\n    };\n\n    // Export for both the CommonJS and browser-like environment\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = ipaddr;\n\n    } else {\n        root.ipaddr = ipaddr;\n    }\n\n}(this));\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst netmask_1 = require(\"netmask\");\nconst ip_regex_1 = __importDefault(require(\"ip-regex\"));\nconst is_ip_1 = __importDefault(require(\"is-ip\"));\nconst ipaddr_js_1 = require(\"ipaddr.js\");\nconst PRIVATE_IP_RANGES = [\n    '0.0.0.0/8',\n    '10.0.0.0/8',\n    '100.64.0.0/10',\n    '127.0.0.0/8',\n    '169.254.0.0/16',\n    '172.16.0.0/12',\n    '192.0.0.0/24',\n    '192.0.0.0/29',\n    '192.0.0.8/32',\n    '192.0.0.9/32',\n    '192.0.0.10/32',\n    '192.0.0.170/32',\n    '192.0.0.171/32',\n    '192.0.2.0/24',\n    '192.31.196.0/24',\n    '192.52.193.0/24',\n    '192.88.99.0/24',\n    '192.168.0.0/16',\n    '192.175.48.0/24',\n    '198.18.0.0/15',\n    '198.51.100.0/24',\n    '203.0.113.0/24',\n    '240.0.0.0/4',\n    '255.255.255.255/32'\n];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new netmask_1.Netmask(ip_range));\nfunction ipv4_check(ip_addr) {\n    for (let r of NETMASK_RANGES) {\n        if (r.contains(ip_addr))\n            return true;\n    }\n    return false;\n}\nfunction ipv6_check(ip_addr) {\n    return /^::$/.test(ip_addr) ||\n        /^::1$/.test(ip_addr) ||\n        /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ip_addr) ||\n        /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ip_addr) ||\n        /^ff([0-9a-fA-F]{2,2}):/i.test(ip_addr);\n}\nexports.default = (ip) => {\n    if ((0, ipaddr_js_1.isValid)(ip)) {\n        const parsed = (0, ipaddr_js_1.parse)(ip);\n        if (parsed.kind() === 'ipv4')\n            return ipv4_check(parsed.toNormalizedString());\n        else if (parsed.kind() === 'ipv6')\n            return ipv6_check(ip);\n    }\n    else if ((0, is_ip_1.default)(ip) && ip_regex_1.default.v6().test(ip))\n        return ipv6_check(ip);\n    return undefined;\n};\n", "'use strict'\n\nmodule.exports = require('./lib').default\n", "'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function truncate(getLength, string, byteLength) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var curByteLength = 0;\n  var codePoint;\n  var segment;\n\n  for (var i = 0; i < charLength; i += 1) {\n    codePoint = string.charCodeAt(i);\n    segment = string[i];\n\n    if (isHighSurrogate(codePoint) && isLowSurrogate(string.charCodeAt(i + 1))) {\n      i += 1;\n      segment += string[i];\n    }\n\n    curByteLength += getLength(segment);\n\n    if (curByteLength === byteLength) {\n      return string.slice(0, i + 1);\n    }\n    else if (curByteLength > byteLength) {\n      return string.slice(0, i - segment.length + 1);\n    }\n  }\n\n  return string;\n};\n\n", "'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      }\n      else {\n        byteLength += 3;\n      }\n    }\n    else if (codePoint <= 0x7f ) {\n      byteLength += 1;\n    }\n    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    }\n    else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};\n", "'use strict';\n\nvar truncate = require(\"./lib/truncate\");\nvar getLength = require(\"utf8-byte-length/browser\");\nmodule.exports = truncate.bind(null, getLength);\n", "/*jshint node:true*/\n'use strict';\n\n/**\n * Replaces characters in strings that are illegal/unsafe for filenames.\n * Unsafe characters are either removed or replaced by a substitute set\n * in the optional `options` object.\n *\n * Illegal Characters on Various Operating Systems\n * / ? < > \\ : * | \"\n * https://kb.acronis.com/content/39790\n *\n * Unicode Control codes\n * C0 0x00-0x1f & C1 (0x80-0x9f)\n * http://en.wikipedia.org/wiki/C0_and_C1_control_codes\n *\n * Reserved filenames on Unix-based systems (\".\", \"..\")\n * Reserved filenames in Windows (\"CON\", \"PRN\", \"AUX\", \"NUL\", \"COM1\",\n * \"COM2\", \"COM3\", \"COM4\", \"COM5\", \"COM6\", \"COM7\", \"COM8\", \"COM9\",\n * \"LPT1\", \"LPT2\", \"LPT3\", \"LPT4\", \"LPT5\", \"LPT6\", \"LPT7\", \"LPT8\", and\n * \"LPT9\") case-insesitively and with or without filename extensions.\n *\n * Capped at 255 characters in length.\n * http://unix.stackexchange.com/questions/32795/what-is-the-maximum-allowed-filename-and-folder-size-with-ecryptfs\n *\n * @param  {String} input   Original filename\n * @param  {Object} options {replacement: String | Function }\n * @return {String}         Sanitized filename\n */\n\nvar truncate = require(\"truncate-utf8-bytes\");\n\nvar illegalRe = /[\\/\\?<>\\\\:\\*\\|\"]/g;\nvar controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\nvar reservedRe = /^\\.+$/;\nvar windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\nvar windowsTrailingRe = /[\\. ]+$/;\n\nfunction sanitize(input, replacement) {\n  if (typeof input !== 'string') {\n    throw new Error('Input must be string');\n  }\n  var sanitized = input\n    .replace(illegalRe, replacement)\n    .replace(controlRe, replacement)\n    .replace(reservedRe, replacement)\n    .replace(windowsReservedRe, replacement)\n    .replace(windowsTrailingRe, replacement);\n  return truncate(sanitized, 255);\n}\n\nmodule.exports = function (input, options) {\n  var replacement = (options && options.replacement) || '';\n  var output = sanitize(input, replacement);\n  if (replacement === '') {\n    return output;\n  }\n  return sanitize(output, '');\n};\n", "/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n", "/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n", "/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n", "/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n", "/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n", "/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n", "module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n", "'use strict'\n\n/**\n * Returns the first result from an (async) iterable, unless empty, in which\n * case returns `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst first = async (source) => {\n  for await (const entry of source) { // eslint-disable-line no-unreachable-loop\n    return entry\n  }\n\n  return undefined\n}\n\nmodule.exports = first\n", "'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = function mutableProxyFactory(defaultTarget) {\n  var mutableHandler = void 0;\n  var mutableTarget = void 0;\n\n  function setTarget(target) {\n    if (!(target instanceof Object)) {\n      throw new Error('Target \"' + target + '\" is not an object');\n    }\n    mutableTarget = target;\n  }\n\n  function setHandler(handler) {\n    Object.keys(handler).forEach(function (key) {\n      var value = handler[key];\n\n      if (typeof value !== 'function') {\n        throw new Error('Trap \"' + key + ': ' + value + '\" is not a function');\n      }\n\n      if (!Reflect[key]) {\n        throw new Error('Trap \"' + key + ': ' + value + '\" is not a valid trap');\n      }\n    });\n    mutableHandler = handler;\n  }\n  setTarget(function () {});\n\n  if (defaultTarget) {\n    setTarget(defaultTarget);\n  }\n  setHandler(Reflect);\n\n  // Dynamically forward all the traps to the associated methods on the mutable handler\n  var handler = new Proxy({}, {\n    get: function get(target, property) {\n      return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return mutableHandler[property].apply(null, [mutableTarget].concat(_toConsumableArray(args.slice(1))));\n      };\n    }\n  });\n\n  return {\n    setTarget: setTarget,\n    setHandler: setHandler,\n    getTarget: function getTarget() {\n      return mutableTarget;\n    },\n    getHandler: function getHandler() {\n      return mutableHandler;\n    },\n\n    proxy: new Proxy(mutableTarget, handler)\n  };\n};", "'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n", "'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n", "'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n", "'use strict'\n\n/**\n * Invokes the passed function for each item in an iterable\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {(thing: T) => void | Promise<void>} fn\n */\nconst each = async function * (source, fn) {\n  for await (const thing of source) {\n    await fn(thing)\n    yield thing\n  }\n}\n\nmodule.exports = each\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "'use strict'\n\nmodule.exports = Receptacle\nvar toMS = require('ms')\nvar cache = Receptacle.prototype\nvar counter = new Date() % 1e9\n\nfunction getUID () { return (Math.random() * 1e9 >>> 0) + (counter++) }\n\n/**\n * Creates a cache with a maximum key size.\n *\n * @constructor\n * @param {Object} options\n * @param {Number} [options.max=Infinity] the maximum number of keys allowed in the cache (lru).\n * @param {Array} [options.items=[]] the default items in the cache.\n */\nfunction Receptacle (options) {\n  options = options || {}\n  this.id = options.id || getUID()\n  this.max = options.max || Infinity\n  this.items = options.items || []\n  this._lookup = {}\n  this.size = this.items.length\n  this.lastModified = new Date(options.lastModified || new Date())\n\n  // Setup initial timers and indexes for the cache.\n  for (var item, ttl, i = this.items.length; i--;) {\n    item = this.items[i]\n    ttl = new Date(item.expires) - new Date()\n    this._lookup[item.key] = item\n    if (ttl > 0) this.expire(item.key, ttl)\n    else if (ttl <= 0) this.delete(item.key)\n  }\n}\n\n/**\n * Tests if a key is currently in the cache.\n * Does not check if slot is empty.\n *\n * @param {String} key - the key to retrieve from the cache.\n * @return {Boolean}\n */\ncache.has = function (key) {\n  return key in this._lookup\n}\n\n/**\n * Retrieves a key from the cache and marks it as recently used.\n *\n * @param {String} key - the key to retrieve from the cache.\n * @return {*}\n */\ncache.get = function (key) {\n  if (!this.has(key)) return null\n  var record = this._lookup[key]\n  // Update expiry for \"refresh\" keys\n  if (record.refresh) this.expire(key, record.refresh)\n  // Move to front of the line.\n  this.items.splice(this.items.indexOf(record), 1)\n  this.items.push(record)\n  return record.value\n}\n\n/**\n * Retrieves user meta data for a cached item.\n *\n * @param {String} key - the key to retrieve meta data from the cache.\n * @return {*}\n */\ncache.meta = function (key) {\n  if (!this.has(key)) return null\n  var record = this._lookup[key]\n  if (!('meta' in record)) return null\n  return record.meta\n}\n\n/**\n * Puts a key into the cache with an optional expiry time.\n *\n * @param {String} key - the key for the value in the cache.\n * @param {*} value - the value to place at the key.\n * @param {Number} [options.ttl] - a time after which the key will be removed.\n * @return {Receptacle}\n */\ncache.set = function (key, value, options) {\n  var oldRecord = this._lookup[key]\n  var record = this._lookup[key] = { key: key, value: value }\n  // Mark cache as modified.\n  this.lastModified = new Date()\n\n  if (oldRecord) {\n    // Replace an old key.\n    clearTimeout(oldRecord.timeout)\n    this.items.splice(this.items.indexOf(oldRecord), 1, record)\n  } else {\n    // Remove least used item if needed.\n    if (this.size >= this.max) this.delete(this.items[0].key)\n    // Add a new key.\n    this.items.push(record)\n    this.size++\n  }\n\n  if (options) {\n    // Setup key expiry.\n    if ('ttl' in options) this.expire(key, options.ttl)\n    // Store user options in the record.\n    if ('meta' in options) record.meta = options.meta\n    // Mark a auto refresh key.\n    if (options.refresh) record.refresh = options.ttl\n  }\n\n  return this\n}\n\n/**\n * Deletes an item from the cache.\n *\n * @param {String} key - the key to remove.\n * @return {Receptacle}\n */\ncache.delete = function (key) {\n  var record = this._lookup[key]\n  if (!record) return false\n  this.lastModified = new Date()\n  this.items.splice(this.items.indexOf(record), 1)\n  clearTimeout(record.timeout)\n  delete this._lookup[key]\n  this.size--\n  return this\n}\n\n/**\n * Utility to register a key that will be removed after some time.\n *\n * @param {String} key - the key to remove.\n * @param {Number} [ms] - the timeout before removal.\n * @return {Receptacle}\n */\ncache.expire = function (key, ttl) {\n  var ms = ttl || 0\n  var record = this._lookup[key]\n  if (!record) return this\n  if (typeof ms === 'string') ms = toMS(ttl)\n  if (typeof ms !== 'number') throw new TypeError('Expiration time must be a string or number.')\n  clearTimeout(record.timeout)\n  record.timeout = setTimeout(this.delete.bind(this, record.key), ms)\n  record.expires = Number(new Date()) + ms\n  return this\n}\n\n/**\n * Deletes all items from the cache.\n * @return {Receptacle}\n */\ncache.clear = function () {\n  for (var i = this.items.length; i--;) this.delete(this.items[i].key)\n  return this\n}\n\n/**\n * Fixes serialization issues in polyfilled environments.\n * Ensures non-cyclical serialized object.\n */\ncache.toJSON = function () {\n  var items = new Array(this.items.length)\n  var item\n  for (var i = items.length; i--;) {\n    item = this.items[i]\n    items[i] = {\n      key: item.key,\n      meta: item.meta,\n      value: item.value,\n      expires: item.expires,\n      refresh: item.refresh\n    }\n  }\n\n  return {\n    id: this.id,\n    max: isFinite(this.max) ? this.max : undefined,\n    lastModified: this.lastModified,\n    items: items\n  }\n}\n", "'use strict';\n\nconst pDefer = () => {\n\tconst deferred = {};\n\n\tdeferred.promise = new Promise((resolve, reject) => {\n\t\tdeferred.resolve = resolve;\n\t\tdeferred.reject = reject;\n\t});\n\n\treturn deferred;\n};\n\nmodule.exports = pDefer;\n", "const Fifo = require('fast-fifo')\nconst defer = require('p-defer')\n\nmodule.exports = class PFifo {\n  constructor () {\n    this._buffer = new Fifo()\n    this._waitingConsumers = new Fifo()\n  }\n\n  push (chunk) {\n    const { promise, resolve } = defer()\n    this._buffer.push({ chunk, resolve })\n    this._consume()\n    return promise\n  }\n\n  _consume () {\n    while (!this._waitingConsumers.isEmpty() && !this._buffer.isEmpty()) {\n      const nextConsumer = this._waitingConsumers.shift()\n      const nextChunk = this._buffer.shift()\n      nextConsumer.resolve(nextChunk.chunk)\n      nextChunk.resolve()\n    }\n  }\n\n  shift () {\n    const { promise, resolve } = defer()\n    this._waitingConsumers.push({ resolve })\n    this._consume()\n    return promise\n  }\n\n  isEmpty () {\n    return this._buffer.isEmpty()\n  }\n}\n", null, "\nimport all from 'it-all'\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nexport const sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @param {string} s\n * @param {string} r\n */\nexport const replaceStartWith = (s, r) => {\n  const matcher = new RegExp('^' + r)\n  return s.replace(matcher, '')\n}\n", "import { sortAll } from './utils.js'\nimport drain from 'it-drain'\nimport filter from 'it-filter'\nimport take from 'it-take'\n\n/**\n * @typedef {import('interface-store').Options} Options\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Batch} Batch\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Datastore}\n */\nexport class BaseDatastore {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {Key[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (e) =>\n        e.key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (key) =>\n        key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n", "export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n", null, null, null, null, null, null, "import errCode from 'err-code'\n\n/**\n * @param {Error} [err]\n */\nexport function dbOpenFailedError (err) {\n  err = err || new Error('Cannot open database')\n  return errCode(err, 'ERR_DB_OPEN_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function dbDeleteFailedError (err) {\n  err = err || new Error('Delete failed')\n  return errCode(err, 'ERR_DB_DELETE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function dbWriteFailedError (err) {\n  err = err || new Error('Write failed')\n  return errCode(err, 'ERR_DB_WRITE_FAILED')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function abortedError (err) {\n  err = err || new Error('Aborted')\n  return errCode(err, 'ERR_ABORTED')\n}\n", "import { BaseDatastore } from './base.js'\nimport { Key } from 'interface-datastore/key'\nimport * as Errors from './errors.js'\n\n/**\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-store').Options} Options\n */\n\n/**\n * @class MemoryDatastore\n * @implements {Datastore}\n */\nexport class MemoryDatastore extends BaseDatastore {\n  constructor () {\n    super()\n\n    /** @type {Record<string, Uint8Array>} */\n    this.data = {}\n  }\n\n  open () {\n    return Promise.resolve()\n  }\n\n  close () {\n    return Promise.resolve()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   */\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[key.toString()] = val\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[key.toString()]\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async has (key) { // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[key.toString()]\n  }\n\n  async * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: new Key(key), value }))\n  }\n\n  async * _allKeys () {\n    yield * Object.entries(this.data)\n      .map(([key]) => new Key(key))\n  }\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, "/**\n * Thin ESM wrapper for CJS named exports.\n *\n * Ref: https://redfin.engineering/node-modules-at-war-why-commonjs-and-es-modules-cant-get-along-9617135eeca1\n */\n\nimport mergeOptions from './index.js';\nexport default mergeOptions;\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export default async function pReflect(promise) {\n\ttry {\n\t\tconst value = await promise;\n\n\t\treturn {\n\t\t\tstatus: 'fulfilled',\n\t\t\tvalue,\n\t\t\tisFulfilled: true,\n\t\t\tisRejected: false\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tstatus: 'rejected',\n\t\t\treason: error,\n\t\t\tisFulfilled: false,\n\t\t\tisRejected: true\n\t\t};\n\t}\n}\n\nexport function isFulfilled(promiseResult) {\n\treturn 'value' in promiseResult;\n}\n\nexport function isRejected(promiseResult) {\n\treturn 'reason' in promiseResult;\n}\n", "/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n", "import Queue from 'yocto-queue';\n\nexport default function pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.enqueue(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n", "import pReflect from 'p-reflect';\nimport pLimit from 'p-limit';\n\nexport default async function pSettle(array, options = {}) {\n\tconst {concurrency = Number.POSITIVE_INFINITY} = options;\n\tconst limit = pLimit(concurrency);\n\n\treturn Promise.all(array.map(element => {\n\t\tif (element && typeof element.then === 'function') {\n\t\t\treturn pReflect(element);\n\t\t}\n\n\t\tif (typeof element === 'function') {\n\t\t\treturn pReflect(limit(() => element()));\n\t\t}\n\n\t\treturn pReflect(Promise.resolve(element));\n\t}));\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PQueue_instances, _PQueue_carryoverConcurrencyCount, _PQueue_isIntervalIgnored, _PQueue_intervalCount, _PQueue_intervalCap, _PQueue_interval, _PQueue_intervalEnd, _PQueue_intervalId, _PQueue_timeoutId, _PQueue_queue, _PQueue_queueClass, _PQueue_pendingCount, _PQueue_concurrency, _PQueue_isPaused, _PQueue_throwOnTimeout, _PQueue_doesIntervalAllowAnother_get, _PQueue_doesConcurrentAllowAnother_get, _PQueue_next, _PQueue_emitEvents, _PQueue_onResumeInterval, _PQueue_isIntervalPaused_get, _PQueue_tryToStartAnother, _PQueue_initializeIntervalIfNeeded, _PQueue_onInterval, _PQueue_processQueue, _PQueue_onEvent;\nimport EventEmitter from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\nconst timeoutError = new TimeoutError();\n/**\nThe error thrown by `queue.add()` when a job is aborted before it is run. See `signal`.\n*/\nexport class AbortError extends Error {\n}\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        _PQueue_instances.add(this);\n        _PQueue_carryoverConcurrencyCount.set(this, void 0);\n        _PQueue_isIntervalIgnored.set(this, void 0);\n        _PQueue_intervalCount.set(this, 0);\n        _PQueue_intervalCap.set(this, void 0);\n        _PQueue_interval.set(this, void 0);\n        _PQueue_intervalEnd.set(this, 0);\n        _PQueue_intervalId.set(this, void 0);\n        _PQueue_timeoutId.set(this, void 0);\n        _PQueue_queue.set(this, void 0);\n        _PQueue_queueClass.set(this, void 0);\n        _PQueue_pendingCount.set(this, 0);\n        // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n        _PQueue_concurrency.set(this, void 0);\n        _PQueue_isPaused.set(this, void 0);\n        _PQueue_throwOnTimeout.set(this, void 0);\n        /**\n        Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n    \n        Applies to each future operation.\n        */\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_carryoverConcurrencyCount, options.carryoverConcurrencyCount, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isIntervalIgnored, options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0, \"f\");\n        __classPrivateFieldSet(this, _PQueue_intervalCap, options.intervalCap, \"f\");\n        __classPrivateFieldSet(this, _PQueue_interval, options.interval, \"f\");\n        __classPrivateFieldSet(this, _PQueue_queue, new options.queueClass(), \"f\");\n        __classPrivateFieldSet(this, _PQueue_queueClass, options.queueClass, \"f\");\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        __classPrivateFieldSet(this, _PQueue_throwOnTimeout, options.throwOnTimeout === true, \"f\");\n        __classPrivateFieldSet(this, _PQueue_isPaused, options.autoStart === false, \"f\");\n    }\n    get concurrency() {\n        return __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        __classPrivateFieldSet(this, _PQueue_concurrency, newConcurrency, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                var _a;\n                var _b, _c;\n                __classPrivateFieldSet(this, _PQueue_pendingCount, (_b = __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\"), _b++, _b), \"f\");\n                __classPrivateFieldSet(this, _PQueue_intervalCount, (_c = __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\"), _c++, _c), \"f\");\n                try {\n                    if ((_a = options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                        // TODO: Use ABORT_ERR code when targeting Node.js 16 (https://nodejs.org/docs/latest-v16.x/api/errors.html#abort_err)\n                        reject(new AbortError('The task was aborted.'));\n                        return;\n                    }\n                    const operation = (this.timeout === undefined && options.timeout === undefined) ? fn({ signal: options.signal }) : pTimeout(Promise.resolve(fn({ signal: options.signal })), (options.timeout === undefined ? this.timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? __classPrivateFieldGet(this, _PQueue_throwOnTimeout, \"f\") : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    reject(error);\n                    this.emit('error', error);\n                }\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_next).call(this);\n            };\n            __classPrivateFieldGet(this, _PQueue_queue, \"f\").enqueue(run, options);\n            __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n            return this;\n        }\n        __classPrivateFieldSet(this, _PQueue_isPaused, false, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        __classPrivateFieldSet(this, _PQueue_isPaused, true, \"f\");\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        __classPrivateFieldSet(this, _PQueue_queue, new (__classPrivateFieldGet(this, _PQueue_queueClass, \"f\"))(), \"f\");\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'next', () => __classPrivateFieldGet(this, _PQueue_queue, \"f\").size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (__classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n            return;\n        }\n        await __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onEvent).call(this, 'idle');\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return __classPrivateFieldGet(this, _PQueue_queue, \"f\").filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\");\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return __classPrivateFieldGet(this, _PQueue_isPaused, \"f\");\n    }\n}\n_PQueue_carryoverConcurrencyCount = new WeakMap(), _PQueue_isIntervalIgnored = new WeakMap(), _PQueue_intervalCount = new WeakMap(), _PQueue_intervalCap = new WeakMap(), _PQueue_interval = new WeakMap(), _PQueue_intervalEnd = new WeakMap(), _PQueue_intervalId = new WeakMap(), _PQueue_timeoutId = new WeakMap(), _PQueue_queue = new WeakMap(), _PQueue_queueClass = new WeakMap(), _PQueue_pendingCount = new WeakMap(), _PQueue_concurrency = new WeakMap(), _PQueue_isPaused = new WeakMap(), _PQueue_throwOnTimeout = new WeakMap(), _PQueue_instances = new WeakSet(), _PQueue_doesIntervalAllowAnother_get = function _PQueue_doesIntervalAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") < __classPrivateFieldGet(this, _PQueue_intervalCap, \"f\");\n}, _PQueue_doesConcurrentAllowAnother_get = function _PQueue_doesConcurrentAllowAnother_get() {\n    return __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") < __classPrivateFieldGet(this, _PQueue_concurrency, \"f\");\n}, _PQueue_next = function _PQueue_next() {\n    var _a;\n    __classPrivateFieldSet(this, _PQueue_pendingCount, (_a = __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\"), _a--, _a), \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this);\n    this.emit('next');\n}, _PQueue_emitEvents = function _PQueue_emitEvents() {\n    this.emit('empty');\n    if (__classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") === 0) {\n        this.emit('idle');\n    }\n}, _PQueue_onResumeInterval = function _PQueue_onResumeInterval() {\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n    __classPrivateFieldSet(this, _PQueue_timeoutId, undefined, \"f\");\n}, _PQueue_isIntervalPaused_get = function _PQueue_isIntervalPaused_get() {\n    const now = Date.now();\n    if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\") === undefined) {\n        const delay = __classPrivateFieldGet(this, _PQueue_intervalEnd, \"f\") - now;\n        if (delay < 0) {\n            // Act as the interval was done\n            // We don't need to resume it here because it will be resumed on line 160\n            __classPrivateFieldSet(this, _PQueue_intervalCount, (__classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\")) ? __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") : 0, \"f\");\n        }\n        else {\n            // Act as the interval is pending\n            if (__classPrivateFieldGet(this, _PQueue_timeoutId, \"f\") === undefined) {\n                __classPrivateFieldSet(this, _PQueue_timeoutId, setTimeout(() => {\n                    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onResumeInterval).call(this);\n                }, delay), \"f\");\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_tryToStartAnother = function _PQueue_tryToStartAnother() {\n    if (__classPrivateFieldGet(this, _PQueue_queue, \"f\").size === 0) {\n        // We can clear the interval (\"pause\")\n        // Because we can redo it later (\"resume\")\n        if (__classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n            clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        }\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_emitEvents).call(this);\n        return false;\n    }\n    if (!__classPrivateFieldGet(this, _PQueue_isPaused, \"f\")) {\n        const canInitializeInterval = !__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_isIntervalPaused_get);\n        if (__classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesIntervalAllowAnother_get) && __classPrivateFieldGet(this, _PQueue_instances, \"a\", _PQueue_doesConcurrentAllowAnother_get)) {\n            const job = __classPrivateFieldGet(this, _PQueue_queue, \"f\").dequeue();\n            if (!job) {\n                return false;\n            }\n            this.emit('active');\n            job();\n            if (canInitializeInterval) {\n                __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_initializeIntervalIfNeeded).call(this);\n            }\n            return true;\n        }\n    }\n    return false;\n}, _PQueue_initializeIntervalIfNeeded = function _PQueue_initializeIntervalIfNeeded() {\n    if (__classPrivateFieldGet(this, _PQueue_isIntervalIgnored, \"f\") || __classPrivateFieldGet(this, _PQueue_intervalId, \"f\") !== undefined) {\n        return;\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalId, setInterval(() => {\n        __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_onInterval).call(this);\n    }, __classPrivateFieldGet(this, _PQueue_interval, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _PQueue_intervalEnd, Date.now() + __classPrivateFieldGet(this, _PQueue_interval, \"f\"), \"f\");\n}, _PQueue_onInterval = function _PQueue_onInterval() {\n    if (__classPrivateFieldGet(this, _PQueue_intervalCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") === 0 && __classPrivateFieldGet(this, _PQueue_intervalId, \"f\")) {\n        clearInterval(__classPrivateFieldGet(this, _PQueue_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _PQueue_intervalId, undefined, \"f\");\n    }\n    __classPrivateFieldSet(this, _PQueue_intervalCount, __classPrivateFieldGet(this, _PQueue_carryoverConcurrencyCount, \"f\") ? __classPrivateFieldGet(this, _PQueue_pendingCount, \"f\") : 0, \"f\");\n    __classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_processQueue).call(this);\n}, _PQueue_processQueue = function _PQueue_processQueue() {\n    // eslint-disable-next-line no-empty\n    while (__classPrivateFieldGet(this, _PQueue_instances, \"m\", _PQueue_tryToStartAnother).call(this)) { }\n}, _PQueue_onEvent = async function _PQueue_onEvent(event, filter) {\n    return new Promise(resolve => {\n        const listener = () => {\n            if (filter && !filter()) {\n                return;\n            }\n            this.off(event, listener);\n            resolve();\n        };\n        this.on(event, listener);\n    });\n};\n", "export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined ?\n\tnew AbortError(errorMessage) :\n\tnew DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined ?\n\t\tgetDOMException('This operation was aborted.') :\n\t\tsignal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, milliseconds, fallback, options) {\n\tlet timer;\n\n\tconst cancelablePromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tresolve(promise);\n\t\t\treturn;\n\t\t}\n\n\t\toptions = {\n\t\t\tcustomTimers: {setTimeout, clearTimeout},\n\t\t\t...options\n\t\t};\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\ttimer = options.customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (typeof fallback === 'function') {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\treject(timeoutError);\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t} finally {\n\t\t\t\toptions.customTimers.clearTimeout.call(undefined, timer);\n\t\t\t}\n\t\t})();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tclearTimeout(timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n", "// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PriorityQueue_queue;\nimport lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    constructor() {\n        _PriorityQueue_queue.set(this, []);\n    }\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            run,\n        };\n        if (this.size && __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\")[this.size - 1].priority >= options.priority) {\n            __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").push(element);\n            return;\n        }\n        const index = lowerBound(__classPrivateFieldGet(this, _PriorityQueue_queue, \"f\"), element, (a, b) => b.priority - a.priority);\n        __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").splice(index, 0, element);\n    }\n    dequeue() {\n        const item = __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return __classPrivateFieldGet(this, _PriorityQueue_queue, \"f\").length;\n    }\n}\n_PriorityQueue_queue = new WeakMap();\n", null, null, null, null, null, null, null, null, null, "const globalFetch = globalThis.fetch;\nconst globalHeaders = globalThis.Headers;\nconst globalRequest = globalThis.Request;\nconst globalResponse = globalThis.Response;\nexport {\n  globalFetch as fetch\n};\nexport {\n  globalHeaders as Headers\n};\nexport {\n  globalRequest as Request\n};\nexport {\n  globalResponse as Response\n};", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
  "mappings": "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",
  "names": ["all", "drain", "filter", "take", "retimer", "AbortController", "retimer", "TimeoutController", "setDelayedInterval", "clearDelayedInterval", "ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "EventEmitter", "setMaxListeners", "events", "once", "name", "name", "globalThis", "symbol", "merge", "Netmask", "string", "string", "first", "stop", "string", "require_browser", "string", "require_browser", "sanitize", "forge", "forge", "forge", "forge", "forge", "pki", "cert", "i", "first", "forge", "first", "handler", "require_it_all", "all", "require_it_filter", "filter", "map", "each", "EventEmitter", "events", "name", "Receptacle", "all", "drain", "filter", "it", "take", "name", "encode", "decode", "string", "string", "errCode", "import_err_code", "messages", "codes", "import_err_code", "filter", "filter", "errCode", "drain", "drain", "errCode", "filter", "import_err_code", "errCode", "drain", "import_err_code", "errCode", "import_err_code", "mergeOptions", "log", "log", "isBrowser", "import_events", "map", "map", "str", "import_timeout_abort_controller", "log", "errCode", "retimer", "name", "import_retimer", "all", "all", "log", "defaultOptions", "retimer", "filter", "all", "import_err_code", "util", "ReaderClass", "ReaderBufferClass", "WriterClass", "WriterBufferClass", "message", "CODEC_TYPES", "createCodec", "name", "encode", "decode", "encode", "writer", "decode", "reader", "createCodec", "encode", "decode", "createCodec", "CircuitRelay", "Status", "__StatusValues", "Type", "__TypeValues", "Peer", "_codec", "reader", "log", "source", "import_err_code", "log", "log", "request", "log", "request", "errCode", "canHop", "import_timeout_abort_controller", "import_events", "log", "Circuit", "symbol", "request", "errCode", "import_set_delayed_interval", "asUint8Array", "allocUnsafe", "asUint8Array", "createCodec", "name", "encode", "decode", "string", "ascii", "allocUnsafe", "BASES", "bases_default", "fromString", "string", "bases_default", "asUint8Array", "toString", "bases_default", "isIpPrivate", "log", "fromString", "all", "multiaddr", "toString", "log", "import_forge", "forge", "import_err_code", "log", "errCode", "name", "forge", "fromString", "toString", "r", "key", "import_err_code", "import_forge", "import_err_code", "import_util", "import_err_code", "errcode", "forgePbkdf2", "forgeUtil", "log", "privates", "defaultOptions", "name", "sanitize", "errCode", "toString", "fromString", "import_retimer", "retimer", "LRU", "source", "import_err_code", "map", "log", "errCode", "message", "FaultTolerance", "import_err_code", "import_err_code", "import_err_code", "asUint8Array", "allocUnsafe", "asUint8Array", "createCodec", "name", "encode", "decode", "string", "ascii", "allocUnsafe", "BASES", "bases_default", "fromString", "string", "bases_default", "asUint8Array", "import_it_first", "toString", "bases_default", "fromString", "encode", "writer", "reader", "first", "errCode", "toString", "import_it_merge", "log", "reader", "writer", "fromString", "protocol", "response", "errCode", "log", "writer", "reader", "fromString", "encode", "import_err_code", "symbol", "log", "symbol", "errCode", "import_err_code", "log", "errCode", "import_timeout_abort_controller", "import_events", "log", "errCode", "mutableProxy", "import_err_code", "Identify", "reader", "import_err_code", "asUint8Array", "allocUnsafe", "asUint8Array", "createCodec", "name", "encode", "decode", "string", "ascii", "allocUnsafe", "BASES", "bases_default", "fromString", "string", "bases_default", "asUint8Array", "codes", "import_reader", "import_reader_buffer", "import_writer", "import_writer_buffer", "import_minimal", "configure", "util", "ReaderClass", "ReaderBufferClass", "WriterClass", "WriterBufferClass", "methods", "patchReader", "reader", "patchWriter", "writer", "decodeMessage", "reader", "encodeMessage", "message", "writer", "CODEC_TYPES", "createCodec", "name", "encode", "decode", "message", "encode", "decode", "createCodec", "CODEC_TYPES", "Envelope", "message", "reader", "encodeMessage", "decodeMessage", "errCode", "codes", "fromString", "sort", "a", "b", "PeerRecord", "AddressInfo", "_codec", "message", "reader", "encodeMessage", "decodeMessage", "PeerRecord", "import_timeout_abort_controller", "import_events", "log", "fromString", "source", "errCode", "message", "PeerRecord", "data", "import_err_code", "FetchRequest", "reader", "FetchResponse", "StatusCode", "__StatusCodeValues", "import_timeout_abort_controller", "import_events", "log", "source", "errCode", "request", "data", "import_err_code", "equals", "PROTOCOL_VERSION", "PROTOCOL_NAME", "import_timeout_abort_controller", "import_events", "log", "PROTOCOL_NAME", "PROTOCOL_VERSION", "source", "equals", "errCode", "import_private_ip", "import_err_code", "log", "errCode", "isPrivateIp", "log", "PeerRecord", "import_err_code", "errCode", "import_err_code", "codes", "import_it_all", "import_it_filter", "import_it_map", "import_it_foreach", "log", "PeerRecord", "multiaddr", "codes", "errcode", "each", "filter", "map", "all", "import_err_code", "equals", "log", "EVENT_NAME", "errcode", "codes", "equals", "import_err_code", "log", "EVENT_NAME", "codes", "errcode", "equals", "import_err_code", "log", "EVENT_NAME", "codes", "errcode", "import_err_code", "import_reader", "import_reader_buffer", "import_writer", "import_writer_buffer", "import_minimal", "configure", "util", "ReaderClass", "ReaderBufferClass", "WriterClass", "WriterBufferClass", "methods", "patchReader", "reader", "patchWriter", "writer", "decodeMessage", "reader", "encodeMessage", "message", "writer", "CODEC_TYPES", "createCodec", "name", "encode", "decode", "message", "encode", "decode", "createCodec", "CODEC_TYPES", "Peer", "message", "reader", "encodeMessage", "decodeMessage", "Address", "Metadata", "message", "AbortError", "pTimeout", "timeoutError", "first", "__classPrivateFieldGet", "AbortError", "EventEmitter", "_a", "pTimeout", "_PQueue_doesIntervalAllowAnother_get", "_PQueue_doesConcurrentAllowAnother_get", "_PQueue_next", "_PQueue_emitEvents", "_PQueue_onResumeInterval", "_PQueue_isIntervalPaused_get", "_PQueue_tryToStartAnother", "_PQueue_initializeIntervalIfNeeded", "_PQueue_onInterval", "_PQueue_processQueue", "_PQueue_onEvent", "filter", "event", "name", "defaultOptions", "name", "defaultOptions", "log", "errcode", "codes", "equals", "multiaddr", "import_err_code", "Tags", "message", "reader", "encodeMessage", "decodeMessage", "Tag", "log", "errCode", "import_err_code", "drain", "errCode", "import_err_code", "errCode", "log", "debug", "Receptacle", "src_default", "src_default", "import_err_code", "errCode", "asUint8Array", "allocUnsafe", "asUint8Array", "createCodec", "name", "encode", "decode", "string", "ascii", "allocUnsafe", "BASES", "import_reader", "import_reader_buffer", "import_writer", "import_writer_buffer", "import_minimal", "configure", "util", "ReaderClass", "ReaderBufferClass", "WriterClass", "WriterBufferClass", "methods", "patchReader", "reader", "patchWriter", "writer", "decodeMessage", "reader", "encodeMessage", "message", "writer", "CODEC_TYPES", "createCodec", "name", "encode", "decode", "message", "encode", "decode", "createCodec", "CODEC_TYPES", "PeerIdProto", "message", "reader", "encodeMessage", "decodeMessage", "allocUnsafe", "asUint8Array", "import_err_code", "import_err_code", "errCode", "import_err_code", "errCode", "import_err_code", "import_timeout_abort_controller", "import_any_signal", "import_events", "import_err_code", "import_events", "log", "errCode", "FIFO", "log", "METRICS_COMPONENT", "errCode", "filter", "all", "options", "log", "Circuit", "errCode", "fromString"]
}
