{
  "version": 3,
  "sources": ["../../@stablelib/hash/hash.ts", "../../@stablelib/constant-time/constant-time.ts", "../../@stablelib/wipe/wipe.ts", "../../@stablelib/hmac/hmac.ts", "../../@stablelib/hkdf/hkdf.ts", "../../@stablelib/random/source/browser.ts", "../../@stablelib/random/source/node.ts", "../../@stablelib/random/source/system.ts", "../../@stablelib/int/int.ts", "../../@stablelib/binary/binary.ts", "../../@stablelib/random/random.ts", "../../@stablelib/x25519/x25519.ts", "../../@stablelib/sha256/sha256.ts", "../../@stablelib/chacha/chacha.ts", "../../@stablelib/poly1305/poly1305.ts", "../../@stablelib/chacha20poly1305/chacha20poly1305.ts", "../../protobufjs/src/rpc/service.js", "../../protobufjs/src/rpc.js", "../../protobufjs/src/roots.js", "../../protobufjs/src/index-minimal.js", "../../@protobufjs/codegen/index.js", "../../@protobufjs/fetch/index.js", "../../@protobufjs/path/index.js", "../../protobufjs/src/types.js", "../../protobufjs/src/field.js", "../../protobufjs/src/oneof.js", "../../protobufjs/src/namespace.js", "../../protobufjs/src/mapfield.js", "../../protobufjs/src/method.js", "../../protobufjs/src/service.js", "../../protobufjs/src/message.js", "../../protobufjs/src/decoder.js", "../../protobufjs/src/verifier.js", "../../protobufjs/src/converter.js", "../../protobufjs/src/wrappers.js", "../../protobufjs/src/type.js", "../../protobufjs/src/root.js", "../../protobufjs/src/util.js", "../../protobufjs/src/object.js", "../../protobufjs/src/enum.js", "../../protobufjs/src/encoder.js", "../../protobufjs/src/index-light.js", "../../protobufjs/src/tokenize.js", "../../protobufjs/src/parse.js", "../../protobufjs/src/common.js", "../../protobufjs/src/index.js", "../../protobufjs/index.js", "../../@chainsafe/libp2p-noise/src/crypto/stablelib.ts", "../../it-pb-stream/src/index.ts", "../../it-pair/src/index.ts", "../../it-pair/src/duplex.ts", "../../@chainsafe/libp2p-noise/src/constants.ts", "../../@chainsafe/libp2p-noise/src/crypto/streaming.ts", "../../uint8arrays/esm/src/util/as-uint8array.js", "../../uint8arrays/esm/src/alloc.js", "../../uint8arrays/esm/src/concat.js", "../../@chainsafe/libp2p-noise/src/encoder.ts", "../../@libp2p/interface-connection-encrypter/src/errors.ts", "../../uint8arrays/node_modules/multiformats/esm/src/bases/identity.js", "../../uint8arrays/node_modules/multiformats/esm/vendor/base-x.js", "../../uint8arrays/node_modules/multiformats/esm/src/bytes.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base2.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base8.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base10.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base16.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base32.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base36.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base58.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base64.js", "../../uint8arrays/node_modules/multiformats/esm/src/bases/base256emoji.js", "../../uint8arrays/node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../../uint8arrays/node_modules/multiformats/esm/vendor/varint.js", "../../uint8arrays/node_modules/multiformats/esm/src/varint.js", "../../uint8arrays/node_modules/multiformats/esm/src/hashes/digest.js", "../../uint8arrays/node_modules/multiformats/esm/src/hashes/hasher.js", "../../uint8arrays/node_modules/multiformats/esm/src/hashes/identity.js", "../../uint8arrays/node_modules/multiformats/esm/src/codecs/json.js", "../../uint8arrays/node_modules/multiformats/esm/src/cid.js", "../../uint8arrays/node_modules/multiformats/esm/src/basics.js", "../../uint8arrays/esm/src/util/bases.js", "../../uint8arrays/esm/src/from-string.js", "../../protons-runtime/src/decode.ts", "../../protons-runtime/src/encode.ts", "../../protons-runtime/src/codec.ts", "../../protons-runtime/src/codecs/message.ts", "../../@chainsafe/libp2p-noise/src/proto/payload.ts", "../../@chainsafe/libp2p-noise/src/utils.ts", "../../uint8arrays/esm/src/equals.js", "../../uint8arrays/esm/src/to-string.js", "../../@chainsafe/libp2p-noise/src/logger.ts", "../../@chainsafe/libp2p-noise/src/nonce.ts", "../../@chainsafe/libp2p-noise/src/handshakes/abstract-handshake.ts", "../../@chainsafe/libp2p-noise/src/handshakes/xx.ts", "../../@chainsafe/libp2p-noise/src/handshake-xx.ts", "../../@chainsafe/libp2p-noise/src/noise.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n", "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n", "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n", "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n", "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n", "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n", "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n", "\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n", "\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n", "\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n", "\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n", "\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n", "\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n", "\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n", "\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/", "\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n", "\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}", "\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n", "\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n", "\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n", "\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n", "\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n", "\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n", "\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n", "\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n", "\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n", "\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n", "\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n", "\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n", "// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n", null, null, null, null, null, null, "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}", null, null, "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", null, null, null, null, null, null, "export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", null, null, null, null, null, null],
  "mappings": "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AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;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",
  "names": ["compare", "HMAC", "hash", "digest", "HKDF", "hash", "length", "length", "length", "length", "length", "generateKeyPairFromSeed", "generateKeyPair", "sharedKey", "SHA256", "hash", "digest", "src", "Poly1305", "digest", "ChaCha20Poly1305", "length", "self", "err", "toString", "isAbsolute", "path", "normalize", "name", "name", "self", "name", "name", "name", "require_service", "name", "methods", "create", "create", "encode", "message", "decode", "field", "name", "message", "Reader", "Writer", "name", "create", "message", "length", "self", "filename", "resolved", "i", "source", "name", "dst", "path", "value", "name", "opt", "toString", "name", "length", "equals", "name", "token", "value", "name", "handshake", "length", "allocUnsafe", "message", "message", "name", "encode", "length", "i", "j", "decode", "string", "name", "encode", "decode", "alphabet", "string", "encode", "decode", "encode", "decode", "decode", "code", "code", "digest", "decode", "equals", "from", "name", "code", "encode", "digest", "name", "from", "identity_exports", "identity", "encode", "identity", "version", "code", "digest", "equals", "base", "decode", "length", "cid", "message", "identity_exports", "name", "encode", "decode", "string", "fromString", "string", "base", "pb", "import_protobufjs", "pb", "methods", "message", "CODEC_TYPES", "createCodec", "name", "encode", "decode", "encode", "decode", "createCodec", "NoiseExtensions", "length", "NoiseHandshakePayload", "fromString", "equals", "toString", "base", "toString", "crypto", "equals", "fromString", "message", "name", "message", "crypto", "handshake", "crypto", "handshake"]
}
